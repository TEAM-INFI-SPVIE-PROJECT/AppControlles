{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, route) {\n    this.http = http;\n    this.route = route;\n  }\n  onSubmit(login) {\n    this.http.get(\"http://localhost:3000/auth/login\").subscribe(res => {\n      const user = res.find(a => {\n        return a.email === login.value.email && a.password === login.value.password;\n      });\n      if (user) {\n        this.route.navigate(['/admin/dasboard']);\n      } else {\n        alert(\"Login failed\");\n      }\n    });\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB,EAAUC,KAAa;IAAvC,SAAI,GAAJD,IAAI;IAAsB,UAAK,GAALC,KAAK;EAAY;EAC/DC,QAAQ,CAACC,KAAS;IAEhB,IAAI,CAACH,IAAI,CAACI,GAAG,CAAM,kCAAkC,CAAC,CACrDC,SAAS,CAACC,GAAG,IAAE;MACf,MAAMC,IAAI,GAAGD,GAAG,CAACE,IAAI,CAAEC,CAAK,IAAG;QAC7B,OAAOA,CAAC,CAACC,KAAK,KAAKP,KAAK,CAACQ,KAAK,CAACD,KAAK,IAAID,CAAC,CAACG,QAAQ,KAAKT,KAAK,CAACQ,KAAK,CAACC,QAAQ;MAC7E,CAAC,CAAC;MACF,IAAIL,IAAI,EAAE;QACT,IAAI,CAACN,KAAK,CAACY,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;OACxC,MAAI;QACJC,KAAK,CAAC,cAAc,CAAC;;IAGtB,CAAC,CAAC;EACL;;AAjBWhB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAiB,SAAXjB,WAAW;EAAAkB,YAFV;AAAM","names":["AuthService","constructor","http","route","onSubmit","login","get","subscribe","res","user","find","a","email","value","password","navigate","alert","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\INFI-STG7\\Desktop\\AppControle\\frontend\\cashManageRegister\\src\\app\\core\\services\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient, private route: Router) { }\n  onSubmit(login:any){\n\n    this.http.get<any>(\"http://localhost:3000/auth/login\")\n    .subscribe(res=>{\n     const user = res.find((a:any)=>{\n       return a.email === login.value.email && a.password === login.value.password;\n     });\n     if (user) {\n      this.route.navigate(['/admin/dasboard'])\n     }else{\n      alert(\"Login failed\")\n     }\n\n     })\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
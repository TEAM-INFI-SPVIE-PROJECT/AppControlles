{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class UsersService {\n  constructor(http, route) {\n    this.http = http;\n    this.route = route;\n  }\n  getAlluser() {\n    const httphHeaders = new HttpHeaders();\n    httphHeaders.append('Content-Type', 'application/json');\n    httphHeaders.append('Access-Control-Allow-Origin', '*');\n    return this.http.get(\"http://localhost:3000/auth/login\", {\n      headers: httphHeaders\n    });\n  }\n}\nUsersService.ɵfac = function UsersService_Factory(t) {\n  return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsersService,\n  factory: UsersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAO9D,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,IAAe,EAAUC,KAAa;IAAtC,SAAI,GAAJD,IAAI;IAAqB,UAAK,GAALC,KAAK;EAAY;EAG9DC,UAAU;IAER,MAAMC,YAAY,GAAG,IAAIN,WAAW,EAAE;IACtCM,YAAY,CAACC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACvDD,YAAY,CAACC,MAAM,CAAC,6BAA6B,EAAE,GAAG,CAAC;IACvD,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAM,kCAAkC,EAAG;MAAEC,OAAO,EAAEH;IAAY,CAAE,CAAC;EAC3F;;AAXWL,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAS,SAAZT,YAAY;EAAAU,YAFX;AAAM","names":["HttpHeaders","UsersService","constructor","http","route","getAlluser","httphHeaders","append","get","headers","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\INFI-STG7\\Desktop\\AppControle\\frontend\\cashManageRegister\\src\\app\\core\\services\\users\\users.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(private http:HttpClient, private route: Router) { }\n\n\n  getAlluser(): Observable<any>{\n\n    const httphHeaders = new HttpHeaders();\n    httphHeaders.append('Content-Type', 'application/json');\n    httphHeaders.append('Access-Control-Allow-Origin', '*');\n    return this.http.get<any>(\"http://localhost:3000/auth/login\",  { headers: httphHeaders });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
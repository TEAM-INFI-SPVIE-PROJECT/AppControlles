{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, route) {\n    this.http = http;\n    this.route = route;\n  }\n  onSubmit(login) {\n    console.log(login);\n    const httphHeaders = new HttpHeaders();\n    httphHeaders.append('Content-Type', 'application/json');\n    httphHeaders.append('Access-Control-Allow-Origin', '*');\n    return this.http.post(\"http://localhost:3000/auth/login\", login, {\n      headers: httphHeaders\n    });\n  }\n  getCurrentUser() {\n    const user = localStorage.getItem(\"user\");\n    if (user === null) {\n      return null;\n    } else {\n      return JSON.parse(user);\n    }\n  }\n  isLogin() {\n    let user = localStorage.getItem('user');\n    return user != null ? true : false;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAS9D,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB,EAAUC,KAAa;IAAvC,SAAI,GAAJD,IAAI;IAAsB,UAAK,GAALC,KAAK;EAAY;EAE/DC,QAAQ,CAACC,KAAS;IAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,MAAMG,YAAY,GAAG,IAAIT,WAAW,EAAE;IACtCS,YAAY,CAACC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACvDD,YAAY,CAACC,MAAM,CAAC,6BAA6B,EAAE,GAAG,CAAC;IACvD,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAM,kCAAkC,EAAEL,KAAK,EAAE;MAAEM,OAAO,EAAEH;IAAY,CAAE,CAAC;EAClG;EAMAI,cAAc;IACZ,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAGF,IAAI,KAAG,IAAI,EAAC;MACb,OAAO,IAAI;KACZ,MAAI;MACH,OAAOG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;;EAE3B;EAEAK,OAAO;IACL,IAAIL,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACvC,OAAOF,IAAI,IAAE,IAAI,GAAE,IAAI,GAAC,KAAK;EAC/B;;AA5BWb,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAmB,SAAXnB,WAAW;EAAAoB,YAFV;AAAM","names":["HttpHeaders","AuthService","constructor","http","route","onSubmit","login","console","log","httphHeaders","append","post","headers","getCurrentUser","user","localStorage","getItem","JSON","parse","isLogin","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\INFI-STG7\\Desktop\\AppControle\\frontend\\cashManageRegister\\src\\app\\core\\services\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { User } from '../../models/user';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient, private route: Router) { }\n\n  onSubmit(login:any): Observable<any>{\n    console.log(login);\n    const httphHeaders = new HttpHeaders();\n    httphHeaders.append('Content-Type', 'application/json');\n    httphHeaders.append('Access-Control-Allow-Origin', '*');\n    return this.http.post<any>(\"http://localhost:3000/auth/login\", login, { headers: httphHeaders });\n  }\n\n\n\n\n\n  getCurrentUser(): User | null{\n    const user = localStorage.getItem(\"user\")\n    if(user===null){\n      return null;\n    }else{\n      return JSON.parse(user);\n    }\n  }\n\n  isLogin():boolean {\n    let user = localStorage.getItem('user')\n    return user!=null? true:false\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}